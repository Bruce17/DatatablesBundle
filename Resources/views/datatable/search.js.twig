{##
 # This file is part of the SgDatatablesBundle package.
 #
 # (c) stwe <https://github.com/stwe/DatatablesBundle>
 #
 # For the full copyright and license information, please view the LICENSE
 # file that was distributed with this source code.
 #}
function drawTable() {
    {% if sg_datatables_view.ajax.pipeline > 0 %}
    oTable.clearPipeline().draw();
    {% else %}
    oTable.draw();
    {% endif %}
}

var triggerSearch = function (event, val) {
    oTable
        .column($(event.currentTarget).data('search-column-index'))
        .search(val);

    drawTable();
};

var search = $.fn.dataTable.util.throttle(
    function (event) {
        if (event.type == 'keyup') {
            if (
                event.keyCode == 37 ||
                event.keyCode == 38 ||
                event.keyCode == 39 ||
                event.keyCode == 40 ||
                event.keyCode == 16 ||
                event.keyCode == 17 ||
                event.keyCode == 18
            )
                return;
        }

        triggerSearch(event, $(this).val());
    },
    options.searchDelay
);

$(selector)
    .parents('.dataTables_wrapper')
    .on('keyup change', 'tr input.sg-datatables-individual-filtering', search);

$(selector)
    .parents('.dataTables_wrapper')
    .on('keyup change', 'tr select.sg-datatables-individual-filtering', function (event) {
        var searchValue = $(this).val();
        searchValue = searchValue ? searchValue.toString() : '';
        triggerSearch(event, searchValue);
    });
